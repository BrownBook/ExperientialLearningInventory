name: Release

on:
  push:
    # Create a release when a new version tag is pushed to main
    # branches: ['main']
    tags: ['v*'] # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  buildRelease:
    #uses: BrownBook/ExperientialLearningInventory/.github/workflows/node.js.yml@main
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        php-versions: ['8.1']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: npm test

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl
          #coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Test with phpunit
        run: vendor/bin/phpunit --coverage-text

      - name: Create Artifact
        run: rm -rf node_modules && tar -czf ExperientialLearningInventory-${{ github.ref_name }}.tar.gz boost class contrib img inc javascript/dist templates vendor assets.json cli.php entryPoints.js index.php LICENSE
        # run: rm -rf node_modules && tar -czf ExperientialLearningInventory-${{ github.ref_name }}.tar.gz boost class contrib img inc javascript/dist templates assets.json cli.php entryPoints.js index.php LICENSE

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ''
          draft: false
          prerelease: false

      - name: Upload Artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ExperientialLearningInventory-${{ github.ref_name }}.tar.gz
          asset_name: ExperientialLearningInventory-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip
